
import("//msl-core.gni")
group("sdk") {
  public_deps = []
  if (is_ios) {
    public_deps += [ ":framework_objc" ]
  }

  if (is_mac) {
    public_deps += [ ":mac_framework_objc" ]
  }
}
if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")

  group("android") {
    if (is_android) {
      public_deps = [
        ":libmsl-core",
      ]
    }
  }

  shared_library("libmsl-core") {
    visibility = [ "*" ]
    ldflags = [
      "-Wl,--build-id",
      "-static-libstdc++"
    ]
    deps = [
      "//third_party/spdlog:spdlog",
      "//third_party/curl:curl",
      "./src:libmsl_static"
    ]
    output_extension = "so"
  }
}

if (is_ios || is_mac) {
  rtc_library("msl_objc") {
    visibility = [ "*" ]

    configs += [
      "//:no_exit_time_destructors",
      "//:no_global_constructors",
    ]
    sources = [
      "objc/api/RTCTtt.h",
      "objc/api/RTCTtt.mm",
    ]

    frameworks = [
      "Foundation.framework",
    ]

    deps = [
      "src:libmsl_static",
      # "//third_party/spdlog:spdlog",
      # "//third_party/curl:curl",
    ]
  }
}

if (is_ios) {
  import("//build/config/ios/ios_sdk.gni")
  import("//build/config/ios/rules.gni")
  if (is_ios) {
      ios_framework_bundle_with_umbrella_header("framework_objc") {
        info_plist = "objc/Info.plist"
        output_name = "MslCoreKit"

        common_objc_headers = [
          "objc/base/RTCMacros.h",
          "objc/api/RTCTtt.h",
        ]

        sources = common_objc_headers
        public_headers = common_objc_headers

        ldflags = [
          "-all_load",
          "-install_name",
          "@rpath/$output_name.framework/$output_name",
        ]

        deps = [
          ":msl_objc",
        ]

        frameworks = [
          "Foundation.framework",
          "CoreGraphics.framework",
          "CoreMedia.framework",
          "GLKit.framework",
        ]
      }

      bundle_data("ios_framework_bundle") {
        deps = [ "//sdk/msl-core:framework_objc" ]
        sources = [ "$root_build_dir/MslCoreKit.framework" ]
        outputs = [ "{{bundle_resources_dir}}/Frameworks/{{source_file_part}}" ]
      }
    }
}

if (is_mac) {
  import("//build/config/mac/mac_sdk.gni")
  import("//build/config/mac/rules.gni")
  if (is_mac) {
      mac_framework_bundle_with_umbrella_header("mac_framework_objc") {
        info_plist = "objc/Info.plist"
        output_name = "MslCoreKit"

        sources = [
          "objc/api/RTCTtt.h",
          "objc/base/RTCMacros.h",
        ]

        deps = [
          ":msl_objc",
        ]
        # if (rtc_use_metal_rendering) {
          # deps += [ ":metal_objc" ]
        # }
        # if (!build_with_chromium) {
          # deps += [
            # ":callback_logger_objc",
            # ":file_logger_objc",
          # ]
        # }

        frameworks = [
          "Foundation.framework",
        ]

        # configs += [
        #   "..:common_objc",
        #   ":used_from_extension",
        # ]

        # public_configs = [ ":common_config_objc" ]
      }

      bundle_data("mac_framework_bundle") {
        deps = [ "//sdk/msl-core:mac_framework_objc" ]
        sources = [ "$root_build_dir/MslCoreKit.framework" ]
        outputs = [ "{{bundle_resources_dir}}/Frameworks/{{source_file_part}}" ]
      }
    }
}