plugins {
    id 'com.android.library'
}

ext {
    boolean isWindow = isWindowsOS();
    if (isWindow) {
        native_media_stream_path = rootDir.getAbsolutePath().replace('\\', '/') + "/msl-core/src/main/cpp"
    } else {
        native_media_stream_path = file(rootDir.getAbsolutePath() + "/msl-core/src/main/cpp")
    }
    println "native_media_stream_path=$native_media_stream_path"
    mslAbiFilters = project.hasProperty('mslAbiFilters') ? mslAbiFilters : "arm64-v8a"
    mslNdkPath = project.hasProperty('mslNdkPath') ? mslNdkPath : ""
    println "gradle mslAbiFilters=" + mslAbiFilters
    println "gradle mslNdkPath=" + mslNdkPath
}

android {
    compileSdk 32
    if (mslNdkPath) {
        println("mslNdkPath is not null")
        ndkPath mslNdkPath
    } else {
        println("mslNdkPath is null")
        ndkVersion "21.4.7075529"
    }
    defaultConfig {
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters = []
            abiFilters.addAll("${mslAbiFilters}".split(",").collect{it as String})
        }
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['src/main/libs']
//        }
//    }

    buildTypes {
        release {
            debuggable true
            externalNativeBuild {
                cmake {
                    arguments '-DANDROID_STL=c++_static',
                            "-DPATH_TO_MEDIA_STREAM:STRING=${native_media_stream_path}"
                }
            }
        }

        debug {
            debuggable true
            externalNativeBuild {
                cmake {
                    arguments '-DANDROID_STL=c++_static',
                            "-DPATH_TO_MEDIA_STREAM:STRING=${native_media_stream_path}"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }

    packagingOptions {
        // 如果不设置 doNotStrip，编译出来的安装包还是会丢失调试信息；
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/armeabi-v7a/*.so"
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


/** 判断是否为Windows操作系统 */
boolean isWindowsOS() {
    boolean isWindowsOS = false;
    String osName = System.getProperty("os.name");
    println("os.name=" + osName);
    if (osName == null || "" == osName) {
        return false
    }
    if (osName.toLowerCase().indexOf("windows") > -1) {
        isWindowsOS = true
    }
    return isWindowsOS;
}